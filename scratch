
(
[b {:cmd :assign, :value 956, :out b}]
[ah {:cmd NOT, :params [ag], :out ah}] [da {:cmd OR, :params [cz cy], :out da}] [hp {:cmd AND, :params [hm ho], :out hp}] [hb {:cmd OR, :params [ha gz], :out hb}] [t {:cmd LSHIFT, :params [c 1], :out t}] [x {:cmd OR, :params [v w], :out x}] [ab {:cmd OR, :params [z aa], :out ab}] [jk {:cmd AND, :params [1 jj], :out jk}] [fh {:cmd NOT, :params [fg], :out fh}] [hm {:cmd OR, :params [hf hl], :out hm}] [iy {:cmd OR, :params [iw ix], :out iy}] [hk {:cmd NOT, :params [hj], :out hk}] [dz {:cmd RSHIFT, :params [dy 2], :out dz}] [ef {:cmd AND, :params [ec ee], :out ef}] [bm {:cmd LSHIFT, :params [bi 15], :out bm}] [ad {:cmd NOT, :params [ac], :out ad}] [ae {:cmd AND, :params [ab ad], :out ae}] [bg {:cmd NOT, :params [bf], :out bg}] [lt {:cmd NOT, :params [ls], :out lt}] [eb {:cmd RSHIFT, :params [dy 5], :out eb}] [fu {:cmd NOT, :params [ft], :out fu}] [le {:cmd LSHIFT, :params [la 15], :out le}] [kb {:cmd OR, :params [jp ka], :out kb}] [eg {:cmd OR, :params [dz ef], :out eg}] [ir {:cmd OR, :params [iq ip], :out ir}] [fk {:cmd LSHIFT, :params [eq 1], :out fk}] [ki {:cmd RSHIFT, :params [jp 1], :out ki}] [kt {:cmd AND, :params [kl kr], :out kt}] [ly {:cmd RSHIFT, :params [lf 1], :out ly}] [fs {:cmd OR, :params [fq fr], :out fs}] [lv {:cmd AND, :params [1 lu], :out lv}] [gs {:cmd AND, :params [gk gq], :out gs}] [fx {:cmd AND, :params [fp fv], :out fx}] [fl {:cmd OR, :params [fk fj], :out fl}] [bq {:cmd RSHIFT, :params [bn 5], :out bq}] [hn {:cmd AND, :params [hf hl], :out hn}] [ez {:cmd NOT, :params [ey], :out ez}] [kr {:cmd AND, :params [ko kq], :out kr}] [bk {:cmd OR, :params [bj bi], :out bk}] [im {:cmd AND, :params [hz ik], :out im}] [i {:cmd NOT, :params [h], :out i}] [cw {:cmd NOT, :params [cv], :out cw}] [ak {:cmd AND, :params [x ai], :out ak}] [kd {:cmd NOT, :params [kc], :out kd}] [eu {:cmd RSHIFT, :params [et 2], :out eu}] [fm {:cmd RSHIFT, :params [et 1], :out fm}] [p {:cmd AND, :params [b n], :out p}] [ct {:cmd AND, :params [cq cs], :out ct}] [hw {:cmd OR, :params [hv hu], :out hw}] [ji {:cmd NOT, :params [jh], :out ji}] [hi {:cmd OR, :params [hg hh], :out hi}] [cn {:cmd AND, :params [ck cl], :out cn}] [kq {:cmd NOT, :params [kp], :out kq}] [ep {:cmd LSHIFT, :params [dv 1], :out ep}] [fp {:cmd RSHIFT, :params [fo 2], :out fp}] [a {:cmd :assign, :value lx, :out a}] [fe {:cmd AND, :params [fb fd], :out fe}] [fa {:cmd AND, :params [ex ez], :out fa}] [u {:cmd OR, :params [t s], :out u}] [ky {:cmd NOT, :params [kx], :out ky}] [hd {:cmd LSHIFT, :params [gz 15], :out hd}] [dl {:cmd OR, :params [de dk], :out dl}] [bo {:cmd RSHIFT, :params [bn 2], :out bo}] [fc {:cmd AND, :params [eu fa], :out fc}] [in {:cmd NOT, :params [im], :out in}] [bd {:cmd AND, :params [ba bc], :out bd}] [gh {:cmd RSHIFT, :params [fo 1], :out gh}] [ha {:cmd LSHIFT, :params [gg 1], :out ha}] [kp {:cmd AND, :params [km kn], :out kp}] [aa {:cmd RSHIFT, :params [x 5], :out aa}] [y {:cmd RSHIFT, :params [x 2], :out y}] [fr {:cmd RSHIFT, :params [fo 5], :out fr}] [di {:cmd AND, :params [df dg], :out di}] [lr {:cmd OR, :params [lf lq], :out lr}] [ja {:cmd NOT, :params [iz], :out ja}] [gz {:cmd AND, :params [1 gy], :out gz}] [jy {:cmd AND, :params [jq jw], :out jy}] [jd {:cmd AND, :params [iv jb], :out jd}] [jv {:cmd NOT, :params [ju], :out jv}] [cb {:cmd NOT, :params [ca], :out cb}] [ek {:cmd OR, :params [dy ej], :out ek}] [q {:cmd NOT, :params [p], :out q}] [gu {:cmd AND, :params [gr gt], :out gu}] [bt {:cmd NOT, :params [bs], :out bt}] [go {:cmd AND, :params [gl gm], :out go}] [el {:cmd AND, :params [dy ej], :out el}] [lf {:cmd OR, :params [ld le], :out lf}] [fo {:cmd OR, :params [fm fn], :out fo}] [kh {:cmd OR, :params [kg kf], :out kh}] [dg {:cmd RSHIFT, :params [dd 5], :out dg}] [r {:cmd AND, :params [o q], :out r}] [gn {:cmd OR, :params [gl gm], :out gn}] [fw {:cmd OR, :params [fp fv], :out fw}] [ge {:cmd AND, :params [1 gd], :out ge}] [az {:cmd AND, :params [aw ay], :out az}] [ka {:cmd AND, :params [jx jz], :out ka}] [cq {:cmd OR, :params [cj cp], :out cq}] [ey {:cmd AND, :params [ev ew], :out ey}] [dh {:cmd OR, :params [df dg], :out dh}] [ip {:cmd AND, :params [1 io], :out ip}] [dd {:cmd OR, :params [db dc], :out dd}] [v {:cmd RSHIFT, :params [b 1], :out v}] [gv {:cmd OR, :params [gj gu], :out gv}] [ma {:cmd OR, :params [ly lz], :out ma}] [js {:cmd RSHIFT, :params [jp 5], :out js}] [jc {:cmd OR, :params [iv jb], :out jc}] [hr {:cmd AND, :params [he hp], :out hr}] [gp {:cmd NOT, :params [go], :out gp}] [es {:cmd LSHIFT, :params [eo 15], :out es}] [io {:cmd AND, :params [il in], :out io}] [ce {:cmd LSHIFT, :params [bk 1], :out ce}] [o {:cmd OR, :params [b n], :out o}] [jz {:cmd NOT, :params [jy], :out jz}] [dx {:cmd LSHIFT, :params [dt 15], :out dx}] [lg {:cmd RSHIFT, :params [lf 2], :out lg}] [ev {:cmd RSHIFT, :params [et 3], :out ev}] [lu {:cmd AND, :params [lr lt], :out lu}] [dc {:cmd LSHIFT, :params [cy 15], :out dc}] [jq {:cmd RSHIFT, :params [jp 2], :out jq}] [ii {:cmd AND, :params [ia ig], :out ii}] [fi {:cmd AND, :params [ff fh], :out fi}] [cz {:cmd LSHIFT, :params [cf 1], :out cz}] [fn {:cmd LSHIFT, :params [fj 15], :out fn}] [gm {:cmd RSHIFT, :params [gj 5], :out gm}] [cl {:cmd RSHIFT, :params [ci 5], :out cl}] [ac {:cmd AND, :params [z aa], :out ac}] [au {:cmd RSHIFT, :params [as 3], :out au}] [ay {:cmd NOT, :params [ax], :out ay}] [ff {:cmd OR, :params [et fe], :out ff}] [bu {:cmd AND, :params [br bt], :out bu}] [eq {:cmd OR, :params [ep eo], :out eq}] [bb {:cmd AND, :params [at az], :out bb}] [ax {:cmd AND, :params [au av], :out ax}] [bz {:cmd OR, :params [bn by], :out bz}] [kf {:cmd AND, :params [1 ke], :out kf}] [ga {:cmd OR, :params [fo fz], :out ga}] [kj {:cmd LSHIFT, :params [kf 15], :out kj}] [ei {:cmd NOT, :params [eh], :out ei}] [hs {:cmd NOT, :params [hr], :out hs}] [do {:cmd AND, :params [dl dn], :out do}] [is {:cmd RSHIFT, :params [hz 1], :out is}] [lp {:cmd NOT, :params [lo], :out lp}] [be {:cmd OR, :params [as bd], :out be}] [ks {:cmd OR, :params [kl kr], :out ks}] [ba {:cmd OR, :params [at az], :out ba}] [er {:cmd RSHIFT, :params [dy 1], :out er}] [bi {:cmd AND, :params [1 bh], :out bi}] [ld {:cmd RSHIFT, :params [kk 1], :out ld}] [db {:cmd RSHIFT, :params [ci 1], :out db}] [dk {:cmd AND, :params [dh dj], :out dk}] [bc {:cmd NOT, :params [bb], :out bc}] [ib {:cmd RSHIFT, :params [hz 3], :out ib}] [if {:cmd NOT, :params [ie], :out if}] [cv {:cmd AND, :params [ci ct], :out cv}] [kg {:cmd LSHIFT, :params [jm 1], :out kg}] [kl {:cmd RSHIFT, :params [kk 2], :out kl}] [fg {:cmd AND, :params [et fe], :out fg}] [dm {:cmd AND, :params [de dk], :out dm}] [kx {:cmd AND, :params [kk kv], :out kx}] [ln {:cmd OR, :params [lg lm], :out ln}] [gk {:cmd RSHIFT, :params [gj 2], :out gk}] [kv {:cmd AND, :params [ks ku], :out kv}] [fd {:cmd NOT, :params [fc], :out fd}] [gb {:cmd AND, :params [fo fz], :out gb}] [cu {:cmd OR, :params [ci ct], :out cu}] [li {:cmd RSHIFT, :params [lf 5], :out li}] [ai {:cmd AND, :params [af ah], :out ai}] [dt {:cmd AND, :params [1 ds], :out dt}] [hg {:cmd RSHIFT, :params [he 3], :out hg}] [jf {:cmd AND, :params [jc je], :out jf}] [hf {:cmd RSHIFT, :params [he 2], :out hf}] [ic {:cmd RSHIFT, :params [hz 5], :out ic}] [bj {:cmd LSHIFT, :params [ap 1], :out bj}] [cd {:cmd AND, :params [1 cc], :out cd}] [ca {:cmd AND, :params [bn by], :out ca}] [n {:cmd AND, :params [k m], :out n}] [w {:cmd LSHIFT, :params [s 15], :out w}] [as {:cmd OR, :params [aq ar], :out as}] [m {:cmd NOT, :params [l], :out m}] [et {:cmd OR, :params [er es], :out et}] [lc {:cmd OR, :params [lb la], :out lc}] [jr {:cmd RSHIFT, :params [jp 3], :out jr}] [bl {:cmd RSHIFT, :params [as 1], :out bl}] [aw {:cmd OR, :params [au av], :out aw}] [lk {:cmd AND, :params [lh li], :out lk}] [cs {:cmd NOT, :params [cr], :out cs}] [hu {:cmd AND, :params [1 ht], :out hu}] [ix {:cmd RSHIFT, :params [iu 5], :out ix}] [av {:cmd RSHIFT, :params [as 5], :out av}] [jp {:cmd OR, :params [jn jo], :out jp}] [cr {:cmd AND, :params [cj cp], :out cr}] [em {:cmd NOT, :params [el], :out em}] [ec {:cmd OR, :params [ea eb], :out ec}] [ew {:cmd RSHIFT, :params [et 5], :out ew}] [dy {:cmd OR, :params [dw dx], :out dy}] [hz {:cmd OR, :params [hx hy], :out hz}] [ku {:cmd NOT, :params [kt], :out ku}] [gg {:cmd OR, :params [gf ge], :out gg}] [la {:cmd AND, :params [1 kz], :out la}] [hv {:cmd LSHIFT, :params [hb 1], :out hv}] [ko {:cmd OR, :params [km kn], :out ko}] [kn {:cmd RSHIFT, :params [kk 5], :out kn}] [lh {:cmd RSHIFT, :params [lf 3], :out lh}] [jg {:cmd OR, :params [iu jf], :out jg}] [dq {:cmd AND, :params [dd do], :out dq}] [df {:cmd RSHIFT, :params [dd 3], :out df}] [gy {:cmd AND, :params [gv gx], :out gy}] [fj {:cmd AND, :params [1 fi], :out fj}] [ci {:cmd OR, :params [cg ch], :out ci}] [iv {:cmd RSHIFT, :params [iu 2], :out iv}] [cc {:cmd AND, :params [bz cb], :out cc}] [kk {:cmd OR, :params [ki kj], :out kk}] [cg {:cmd RSHIFT, :params [bn 1], :out cg}] [ea {:cmd RSHIFT, :params [dy 3], :out ea}] [hh {:cmd RSHIFT, :params [he 5], :out hh}] [lm {:cmd AND, :params [lj ll], :out lm}] [af {:cmd OR, :params [y ae], :out af}] [ds {:cmd AND, :params [dp dr], :out ds}] [e {:cmd RSHIFT, :params [b 3], :out e}] [s {:cmd AND, :params [1 r], :out s}] [jj {:cmd AND, :params [jg ji], :out jj}] [gq {:cmd AND, :params [gn gp], :out gq}] [ls {:cmd AND, :params [lf lq], :out ls}] [je {:cmd NOT, :params [jd], :out je}] [k {:cmd OR, :params [d j], :out k}] [jx {:cmd OR, :params [jq jw], :out jx}] [cj {:cmd RSHIFT, :params [ci 2], :out cj}] [jo {:cmd LSHIFT, :params [jk 15], :out jo}] [eh {:cmd AND, :params [dz ef], :out eh}] [fz {:cmd AND, :params [fw fy], :out fz}] [dj {:cmd NOT, :params [di], :out dj}] [l {:cmd AND, :params [d j], :out l}] [lo {:cmd AND, :params [lg lm], :out lo}] [ia {:cmd RSHIFT, :params [hz 2], :out ia}] [ch {:cmd LSHIFT, :params [cd 15], :out ch}] [kw {:cmd OR, :params [kk kv], :out kw}] [am {:cmd AND, :params [aj al], :out am}] [lj {:cmd OR, :params [lh li], :out lj}] [ck {:cmd RSHIFT, :params [ci 3], :out ck}] [ed {:cmd AND, :params [ea eb], :out ed}] [bh {:cmd AND, :params [be bg], :out bh}] [cp {:cmd AND, :params [cm co], :out cp}] [bx {:cmd NOT, :params [bw], :out bx}] [gr {:cmd OR, :params [gk gq], :out gr}] [jh {:cmd AND, :params [iu jf], :out jh}] [gw {:cmd AND, :params [gj gu], :out gw}] [it {:cmd LSHIFT, :params [ip 15], :out it}] [jt {:cmd OR, :params [jr js], :out jt}] [ht {:cmd AND, :params [hq hs], :out ht}] [jn {:cmd RSHIFT, :params [iu 1], :out jn}] [cm {:cmd OR, :params [ck cl], :out cm}] [hq {:cmd OR, :params [he hp], :out hq}] [du {:cmd LSHIFT, :params [da 1], :out du}] [c {:cmd :assign, :value 0, :out c}] [jw {:cmd AND, :params [jt jv], :out jw}] [en {:cmd AND, :params [ek em], :out en}] [co {:cmd NOT, :params [cn], :out co}] [ij {:cmd NOT, :params [ii], :out ij}] [z {:cmd RSHIFT, :params [x 3], :out z}] [ll {:cmd NOT, :params [lk], :out ll}] [g {:cmd OR, :params [e f], :out g}] [bf {:cmd AND, :params [as bd], :out bf}] [gj {:cmd OR, :params [gh gi], :out gj}] [bn {:cmd OR, :params [bl bm], :out bn}] [gd {:cmd AND, :params [ga gc], :out gd}] [aj {:cmd OR, :params [x ai], :out aj}] [bv {:cmd OR, :params [bo bu], :out bv}] [iq {:cmd LSHIFT, :params [hw 1], :out iq}] [hl {:cmd AND, :params [hi hk], :out hl}] [hc {:cmd RSHIFT, :params [gj 1], :out hc}] [ik {:cmd AND, :params [ih ij], :out ik}] [dn {:cmd NOT, :params [dm], :out dn}] [ju {:cmd AND, :params [jr js], :out ju}] [al {:cmd NOT, :params [ak], :out al}] [ex {:cmd OR, :params [ev ew], :out ex}] [lb {:cmd LSHIFT, :params [kh 1], :out lb}] [j {:cmd AND, :params [g i], :out j}] [lw {:cmd LSHIFT, :params [lc 1], :out lw}] [gc {:cmd NOT, :params [gb], :out gc}] [cx {:cmd AND, :params [cu cw], :out cx}] [id {:cmd OR, :params [ib ic], :out id}] [ih {:cmd OR, :params [ia ig], :out ih}] [gt {:cmd NOT, :params [gs], :out gt}] [jl {:cmd LSHIFT, :params [ir 1], :out jl}] [ar {:cmd LSHIFT, :params [an 15], :out ar}] [jm {:cmd OR, :params [jl jk], :out jm}] [cy {:cmd AND, :params [1 cx], :out cy}] [kz {:cmd AND, :params [kw ky], :out kz}] [ie {:cmd AND, :params [ib ic], :out ie}] [h {:cmd AND, :params [e f], :out h}] [kc {:cmd AND, :params [jp ka], :out kc}] [eo {:cmd AND, :params [1 en], :out eo}] [ag {:cmd AND, :params [y ae], :out ag}] [an {:cmd AND, :params [1 am], :out an}] [hj {:cmd AND, :params [hg hh], :out hj}] [iw {:cmd RSHIFT, :params [iu 3], :out iw}] [de {:cmd RSHIFT, :params [dd 2], :out de}] [fv {:cmd AND, :params [fs fu], :out fv}] [fq {:cmd RSHIFT, :params [fo 3], :out fq}] [aq {:cmd RSHIFT, :params [x 1], :out aq}] [ke {:cmd AND, :params [kb kd], :out ke}] [dp {:cmd OR, :params [dd do], :out dp}] [lq {:cmd AND, :params [ln lp], :out lq}] [hy {:cmd LSHIFT, :params [hu 15], :out hy}] [at {:cmd RSHIFT, :params [as 2], :out at}] [ej {:cmd AND, :params [eg ei], :out ej}] [il {:cmd OR, :params [hz ik], :out il}] [cf {:cmd OR, :params [ce cd], :out cf}] [ft {:cmd AND, :params [fq fr], :out ft}] [dr {:cmd NOT, :params [dq], :out dr}] [fb {:cmd OR, :params [eu fa], :out fb}] [b {:cmd :assign, :value 14146, :out b}] [gl {
:cmd RSHIFT, :params [gj 3], :out gl}] [dv {:cmd OR, :params [du dt], :out dv}] [gf {:cmd LSHIFT, :params [fl 1], :out gf}] [ao {:cmd LSHIFT, :params [u 1], :out ao}] [iu {:cmd OR, :params [is it], :out iu}] [ap {:cmd OR, :params [ao an], :out ap}] [bs {:cmd AND, :params [bp bq], :out bs}] [ho {:cmd NOT, :params [hn], :out ho}] [dw {:cmd RSHIFT, :params [dd 1], :out dw}] [jb {:cmd AND, :params [iy ja], :out jb}] [lz {:cmd LSHIFT, :params [lv 15], :out lz}] [iz {:cmd AND, :params [iw ix], :out iz}] [lx {:cmd OR, :params [lw lv], :out lx}] [bw {:cmd AND, :params [bo bu], :out bw}] [km {:cmd RSHIFT, :params [kk 3], :out km}] [ig {:cmd AND, :params [id if], :out ig}] [ee {:cmd NOT, :params [ed], :out ee}] [by {:cmd AND, :params [bv bx], :out by}] [br {:cmd OR, :params [bp bq], :out br}] [hx {:cmd RSHIFT, :params [he 1], :out hx}] [fy {:cmd NOT, :params [fx], :out fy}] [he {:cmd OR, :params [hc hd], :out he}] [gi {:cmd LSHIFT, :params [ge 15], :out gi}] [d {:cmd RSHIFT, :params [b 2], :out d}] [f {:cmd RSHIFT, :params [b 5], :out f}] [gx {:cmd NOT, :params [gw], :out gx}] [bp {:cmd RSHIFT, :params [bn 3], :out bp}])


ITER {:curr-idx 0, :counted 8, :in (1 2 3 4 5 6 7 8)} will grab 4
ITER {:curr-idx 1, :counted 7, :in (1 2 3 4 6 7 8)} will grab 4
ITER {:curr-idx 2, :counted 6, :in (1 2 3 4 7 8)} will grab 5
ITER {:curr-idx 3, :counted 5, :in (1 2 3 4 7)} will grab 0
ITER {:curr-idx 4, :counted 4, :in (2 3 4 7)} will grab 2
ITER {:curr-idx 5, :counted 3, :in (2 3 7)} will grab 0
ITER {:curr-idx 6, :counted 2, :in (3 7)} will grab 1
{:curr-idx 7, :counted 1, :in (3)}

[;; a ends up with value (* 365 7) or 2555
 ;; b,c, and d are used as temporary variables
 ;; Actually d is initialised to initial value of a plus 2555
 [:cpy a d]
 [:cpy 7 c] [:cpy 365 b] [:inc d] [:dec b] [:jnz b -2] [:dec c] [:jnz c -5]
 ;; -21 brings back to here
 [:cpy d a]

 ;; b gets 2555 (if initial a was 0)
 ;; -19 brings back to here
 [:jnz 0 0] [:cpy a b] [:cpy 0 a]

 ;; b is big number that will be slowly decremented as a incremented (from 0)
 ;; when finally b is zero go to next section, having set a
 ;; and c will be either 2 or 1

 [:cpy 2 c] [:jnz b 2] [:jnz 1 6] [:dec b] [:dec c] [:jnz c -4]
 [:inc a] [:jnz 1 -7]

 ;; when c has become 0 we jump out of this line to the next
 [:cpy 2 b] [:jnz c 2] [:jnz 1 4] [:dec b] [:dec c] [:jnz 1 -4]
 [:jnz 0 0] [:out b] [:jnz a -19] [:jnz 1 -21]]